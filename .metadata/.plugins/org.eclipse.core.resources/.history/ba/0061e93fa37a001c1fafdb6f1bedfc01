package desigmPattern.creational;

class Employee implements Cloneable{
	private Integer id;
	private String name;
	public Integer getId() {
		return id;
	}
	public void setId(Integer id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public Employee() {}
	public Employee(Integer id, String name) {
		super();
		this.id = id;
		this.name = name;
	}
	
	//Shallow copying
	@Override
	protected Object clone() throws CloneNotSupportedException {
		return super.clone();
	}
	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Employee [id=").append(id).append(", name=").append(name).append("]");
		return builder.toString();
	}
	
}

public class PrototypeDP {
	public static void main(String[] args) throws CloneNotSupportedException {
		
		Employee employee = new Employee(121,"raj");
		Employee employeeClone = (Employee) employee.clone();
		System.out.println("----before change----");
		System.out.println(employee+" : "+employee.hashCode());
		System.out.println(employeeClone+ ":"+ employeeClone.hashCode());
		System.out.println("---after change----");
		employee.setName("abhi");
		System.out.println(employee+" : "+employee.hashCode());
		System.out.println(employeeClone+ ":"+ employeeClone.hashCode());
		
	}
	
}
