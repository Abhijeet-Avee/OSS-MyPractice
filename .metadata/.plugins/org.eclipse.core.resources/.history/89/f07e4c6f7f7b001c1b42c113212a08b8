package sinlgeton.dp.issues;

import java.io.Serializable;

class Singleton7 implements Serializable, Cloneable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static volatile Singleton7 singleton1 = null;
	private Singleton7() {
	}

	public static Singleton7 getSingleton7() {
		if (singleton1 == null) {
			if (singleton1 == null) {
				synchronized (Singleton7.class) {
					singleton1 = new Singleton7();
				}
			}
		}
		return singleton1;
	}
	
	//If you have defined the readResolve method then java will not go for
	//deserialization, and will directly call the readResolve method.
	//Thus, same hashcode will be generated while deserialization.
	private Object readResolve() {
		return singleton1;
	}
	
}

public class SingletonDP8 {

}
