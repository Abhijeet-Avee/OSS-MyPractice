package desigmPattern.creational;
//uses: connection factories, logger(log4j)

// How to implement singleton DP..?
// object can be created via lazy approach and eager approach

//Eager approach - object created at class loading
//class Singleton{
//	private static Singleton singleton = new Singleton();
//	private Singleton() {}
//	
//	public static Singleton getSingleton() {
//		return singleton;
//	}
//}

// Attempt 2: lazy approach
//class Singleton{
//	private static Singleton singleton = null;
//	private Singleton() {
//		
//	}
//	public static Singleton getSingleton() {
//		if(singleton == null)
//			singleton = new Singleton();
//		return singleton;
//	}
//}

//Attempt 3 : using synchronized method
//class Singleton{
//	private static Singleton singleton = null;
//	private Singleton() {
//		
//	}
//	//add synchronized to avoid race condition due to access by multiple threads
//	//simultaneously, hence if not synchronized threads will create more than one object
//	public synchronized static Singleton getSingleton() {
//		if(singleton == null)
//			singleton = new Singleton();
//		return singleton;
//	}
//}

//Attempt 4: using synchronized block
//class Singleton {
//	private static Singleton singleton = null;
//
//	private Singleton() {
//	}
//
//	public static Singleton getSingleton() {
//		if (singleton == null) {
//			synchronized (Singleton.class) {
//				singleton = new Singleton();
//			}
//		}
//		return singleton;
//	}
//}


//Attempt 5: Double lock checking is needed since race condition still persists
class Singleton {
	private static Singleton singleton = null;

	private Singleton() {
	}
	public static Singleton getSingleton() {
		if (singleton == null) {
			synchronized (Singleton.class) {
				singleton = new Singleton();
			}
		}
		return singleton;
	}
}

public class SingletonDP {
	public static void main(String[] args) {
		Singleton singleton = Singleton.getSingleton();
		Singleton singleton2 = Singleton.getSingleton();

		System.out.println(singleton.hashCode());
		System.out.println(singleton2.hashCode());
	}
}
