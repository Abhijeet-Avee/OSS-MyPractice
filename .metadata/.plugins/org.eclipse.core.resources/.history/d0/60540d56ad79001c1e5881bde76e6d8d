package multithreading;

class Q {
	int n;
	boolean valueSet=false;
	//Consumer method
	synchronized int get() {
		if(!valueSet) {
			try {
				wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		System.out.println("get: "+n);
		valueSet=false;
		notify();
		return n;
	}
	//Producer method
	synchronized void put(int n) {
		this.n=n;
		System.out.println("put: "+n);
	}
}

class Producer implements Runnable{
	Q q;
	
	public Producer(Q q) {
		this.q = q;
		new Thread(this).start();
	}
	
	@Override
	public void run() {
		while(true) {
			
	}
}

class Consumer implements Runnable{
	
	
	
	@Override
	public void run() {
		
	}

}
}
public class ProducerAndConsumer {
	public static void main(String[] args) {

	}
}
