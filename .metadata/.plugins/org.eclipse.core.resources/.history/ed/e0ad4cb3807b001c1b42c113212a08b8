package sinlgeton.dp.issues;

import java.io.Serializable;

class Singleton9 implements Serializable, Cloneable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private static volatile Singleton9 singleton1 = null;
	private Singleton9() {
	}
	public static Singleton9 getSingleton9() {
		if (singleton1 == null) {
			if (singleton1 == null) {
				synchronized (Singleton9.class) {
					singleton1 = new Singleton9();
				}
			}
		}
		return singleton1;
	}
	private Object readResolve() {
		return singleton1;
	}
	@Override
	protected Object clone() throws CloneNotSupportedException {
		return singleton1;
	}
}

public class SingletonDP9 {
	public static void main(String[] args) throws CloneNotSupportedException {
		Singleton8 singleton1 = Singleton8.getSingleton8();
		System.out.println(singleton1.hashCode());
		
		Singleton8 singleton2 = (Singleton8) singleton1.clone();
		System.out.println(singleton2.hashCode());

	}
}
